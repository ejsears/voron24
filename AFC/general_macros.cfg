# [gcode_macro CUT]
# gcode:
#   G1 X35 F12000
#   G1 Y27 F12000
#   G1 X12 F600
#   G1 X35 F12000

[gcode_macro CUT]
description: Cut filament by pressing the cutter on a pin with a horizontal movement
variable_output_park_pos: 0 # Internal Don't Touch
gcode:
    {% set final_eject = params.FINAL_EJECT|default(0)|int %}
    {% set vars = printer['gcode_macro _AFC_CUT_TIP_VARS'] %}
    {% set pin_loc_x, pin_loc_y = vars.pin_loc_xy|map('float') %}
    {% set pin_park_x_dist = vars['pin_park_x_dist']|float %}
    {% set retract_length = vars['retract_length']|float %}
    {% set simple_tip_forming = vars['simple_tip_forming']|default(true)|lower == 'true' %}
    {% set blade_pos = vars['blade_pos']|float %}
    {% set rip_length = vars['rip_length']|float %}
    {% set pushback_length = vars['pushback_length']|float %}
    {% set pushback_dwell_time = vars['pushback_dwell_time']|int %}
    {% set extruder_move_speed = vars['extruder_move_speed']|float %}
    {% set travel_speed = vars['travel_speed']|float %}
    {% set restore_position = vars['restore_position']|default(true)|lower == 'true' %}
    {% set park_pos = blade_pos + rip_length %}
    {% set pin_park_x_loc = pin_loc_x + pin_park_x_dist %}
    {% set pin_park_y_loc = pin_loc_y %}

    {% if "xy" not in printer.toolhead.homed_axes %}
        G28 X Y
    {% endif %}

    SAVE_GCODE_STATE NAME=_AFC_CUT_TIP_state # Save after possible homing operation to prevent 0,0 being recorded
    SET_PRESSURE_ADVANCE ADVANCE=0 # Temporarily disable pressure advance. Happy Hare will restore it

    G90 # Absolute positioning
    M83 # Relative extrusion
    G92 E0
    {% if retract_length > 0 %}
        # Retract to save filament waste, repeat to allow some cooling
        G1 E-{retract_length} F{extruder_move_speed * 60}
        {% if simple_tip_forming %}
            G1 E{retract_length / 2} F{extruder_move_speed * 60}
            G1 E-{retract_length / 2} F{extruder_move_speed * 60}
        {% endif %}
    {% endif %}

    _FILAMETRIX_MOVE_TO_CUTTER_PIN PIN_PARK_X_LOC={pin_park_x_loc} PIN_PARK_Y_LOC={pin_park_y_loc}
    _FILAMETRIX_DO_CUT_MOTION PIN_PARK_X_LOC={pin_park_x_loc} RIP_LENGTH=0
    _FILAMETRIX_DO_CUT_MOTION PIN_PARK_X_LOC={pin_park_x_loc} RIP_LENGTH={rip_length}

    # Optionally pushback of the tip residual into the hotend to avoid future catching
    {% if pushback_length > 0 %} 
        G1 E{pushback_length} F{extruder_move_speed * 60}
        G4 P{pushback_dwell_time}
        G1 E-{pushback_length} F{extruder_move_speed * 60}
    {% endif %}
    
    # Final eject is for testing
    {% if final_eject %}
        G1 E-80 F{extruder_move_speed * 60}
    {% endif %}

    # Restore state and optionally position (usually on wipetower)
    RESTORE_GCODE_STATE NAME=_AFC_CUT_TIP_state MOVE={1 if restore_position else 0} MOVE_SPEED={travel_speed}


###########################################################################
# Helper macro for tip cutting
#
[gcode_macro _FILAMETRIX_MOVE_TO_CUTTER_PIN]
description: Helper to move the toolhead to the target pin in either safe or faster way, depending on toolhead clearance
gcode:
    {% set pin_park_x_loc = params.PIN_PARK_X_LOC|float %}
    {% set pin_park_y_loc = params.PIN_PARK_Y_LOC|float %}
    {% set vars = printer['gcode_macro _AFC_CUT_TIP_VARS'] %}

    {% set safe_margin_x, safe_margin_y = vars.safe_margin_xy|map('float') %}
    {% set travel_speed = vars['travel_speed']|float %}

    {% if ((printer.gcode_move.gcode_position.x - pin_park_x_loc)|abs < safe_margin_x) or ((printer.gcode_move.gcode_position.y - pin_park_y_loc)|abs < safe_margin_y) %}
        # Make a safe but slower travel move
        G1 X{pin_park_x_loc} F{travel_speed * 60}
        G1 Y{pin_park_y_loc} F{travel_speed * 60}
    {% else %}
        G1 X{pin_park_x_loc} Y{pin_park_y_loc} F{travel_speed * 60}
    {% endif %}


###########################################################################
# Helper macro for tip cutting
#
[gcode_macro _FILAMETRIX_DO_CUT_MOTION]
description: Helper to do a single horizontal cut movement
gcode:
    {% set pin_park_x_loc = params.PIN_PARK_X_LOC | float %}
    {% set vars = printer['gcode_macro _AFC_CUT_TIP_VARS'] %}

    {% set pin_loc_x_compressed = vars['pin_loc_x_compressed']|float %}
    {% set cut_fast_move_fraction = vars['cut_fast_move_fraction']|float %}
    {% set cut_fast_move_speed = vars['cut_fast_move_speed']|float %}
    {% set cut_slow_move_speed = vars['cut_slow_move_speed']|float %}
    {% set cut_dwell_time = vars['cut_dwell_time']|float %}
    {% set evacuate_speed = vars['evacuate_speed']|float %}
    {% set rip_length = vars['rip_length']|float %}
    {% set rip_speed = vars['rip_speed']|float %}
    {% set fast_slow_transition_loc = (pin_loc_x_compressed - pin_park_x_loc) * cut_fast_move_fraction + pin_park_x_loc|float %}

    G1 X{fast_slow_transition_loc} F{cut_fast_move_speed * 60} # Fast move to initiate contact of the blade with filament
    G1 X{pin_loc_x_compressed} F{cut_slow_move_speed * 60} # Do the cut in slow move
    G4 P{cut_dwell_time}
    {% if rip_length > 0 %}
        G1 E-{rip_length} F{rip_speed * 60}
    {% endif %}
    G1 X{pin_park_x_loc} F{evacuate_speed * 60} # Evacuate
    
[gcode_macro BRUSH]
gcode:
  SAVE_GCODE_STATE NAME=_AFC_BRUSH
  G90
  G1 X244 Y350 F15000
  {% set brush = 0 %}
  {% for brush in range(5) %}
    G1 X257 Y350 Z-1 F8000
    G1 X244 Y350 Z-1 F8000
  {% endfor %} 
  G1 X277 Y350 Z10 F6000
  RESTORE_GCODE_STATE NAME=_AFC_BRUSH MOVE=0

[gcode_macro PARK]
gcode:
  G1 Y340 F12000
  G1 X10 F12000
  
[gcode_macro KICK]
gcode:
  G1 Z10 F6000
  G1 X21 Y339 F6000
  G1 Z3 F6000
  G1 X6.5 F6000
  G1 X10 Y340 Z5 F6000
    
[gcode_macro T0]
gcode:
  SAVE_GCODE_STATE NAME=CNG_TOOL
  PARK
  CHANGE_TOOL LANE="t0"
  RESTORE_GCODE_STATE NAME=CNG_TOOL MOVE=1 MOVE_SPEED=150

[gcode_macro T1]
gcode:
  SAVE_GCODE_STATE NAME=CNG_TOOL
  PARK
  CHANGE_TOOL LANE="t1"
  RESTORE_GCODE_STATE NAME=CNG_TOOL MOVE=1 MOVE_SPEED=150
   
[gcode_macro T2]
gcode:
  SAVE_GCODE_STATE NAME=CNG_TOOL
  PARK
  CHANGE_TOOL LANE="t2"
  RESTORE_GCODE_STATE NAME=CNG_TOOL MOVE=1 MOVE_SPEED=150

[gcode_macro T3]
gcode:
  SAVE_GCODE_STATE NAME=CNG_TOOL
  PARK
  CHANGE_TOOL LANE="t3"
  RESTORE_GCODE_STATE NAME=CNG_TOOL MOVE=1 MOVE_SPEED=150

[gcode_macro BT_LANE_EJECT]
gcode:
  {% set lane_num = params.LANE|default(1) %}
  {% set choiceS = 't' ~ lane_num %}
  
  LANE_UNLOAD LANE={choiceS}

[gcode_macro BT_TOOL_UNLOAD]
gcode:
  {% set lane_num = params.LANE|default(1) %}
  {% set choiceS = 't' ~ lane_num %}
  
  TOOL_UNLOAD LANE={choiceS}


